pipeline {
    agent { label 'java' }
    stages { 
        stage ("Build with Ansible") {
            steps {
                sh "ansible-playbook Install-Depen01.yml"
            }
        }
        stage ("SCM Checkin-1") {
            steps {
                script {
                    if( !fileExists('JAGD')) {
                        stage ('stage 1') {
                            // Create all folders up-to and including B
                            sh "mkdir JAGD"
                        }
                    }
                    if( !fileExists('samplemaven')) {
                        stage ('stage 2') {
                            // Create all folders up-to and including B
                            sh "mkdir samplemaven"
                        }
                    }
                }
                dir("samplemaven") {
                    git branch: 'master', url: 'https://github.com/SiddhanthHassanNagaraj/SampleMaven'
                } 
                dir("JAGD") {
                   git branch: 'master', url: 'https://github.com/SiddhanthHassanNagaraj/Jen-Ansi-Doc-GIT'
                }
            }
        }
        stage ("maven build") {
            tools {
                maven 'Maven3.5.2'
                jdk 'JDK1.8'
            }
            steps {
                dir("samplemaven") {
                    sh "mvn package"
                }
            }
        }    
        stage ('Build Image and run container') {
	        input {
                 message 'Mvn Package is Successfull, can I Proceed'
            }
            steps {
            /* we would be executing the docker-compose in the working directory, 
            bcz of the docker build issue as it can understand where is the war file. 
            we will not be able to give the complete path as src to copy the war file */
                sh "docker-compose up -d"
            }
        }
        stage ('push it to docker hub') {
            steps {
                sh "docker push siddhanthhn/tomcatcust001"
            }
        }
        stage ('clean the image and the current folder') {
            steps {
                sh "docker image rmi siddhanthhn/tomcatcust001"
                sh "rm -RF *"
            }
        }
    }
}
